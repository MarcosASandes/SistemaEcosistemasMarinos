// <auto-generated />
using System;
using EcoMarino.AccesoDatos.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoMarino.AccesoDatos.Migrations
{
    [DbContext(typeof(EcoMarinoContext))]
    [Migration("20231111210327_PuntoDeControl1RAENTREGA")]
    partial class PuntoDeControl1RAENTREGA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoMarino.Entidades.Amenaza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradoPeligro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Amenazas");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Configuracion", b =>
                {
                    b.Property<string>("NombreAtributo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TopeInferior")
                        .HasColumnType("int");

                    b.Property<int>("TopeSuperior")
                        .HasColumnType("int");

                    b.HasKey("NombreAtributo");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("EcoMarino.Entidades.ControlCambios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEntidad")
                        .HasColumnType("int");

                    b.Property<string>("NombreResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEntidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ControlCambios");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Ecosistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoAlpha")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("NivelConservacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoAlpha");

                    b.HasIndex("IdEstado");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Ecosistemas");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EcosistemaAmenaza", b =>
                {
                    b.Property<int>("EcosistemaId")
                        .HasColumnType("int");

                    b.Property<int>("AmenazaId")
                        .HasColumnType("int");

                    b.HasKey("EcosistemaId", "AmenazaId");

                    b.HasIndex("AmenazaId");

                    b.ToTable("EcosistemaAmenaza");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EcosistemaEspecie", b =>
                {
                    b.Property<int>("idEcosistema")
                        .HasColumnType("int");

                    b.Property<int>("idEspecie")
                        .HasColumnType("int");

                    b.Property<bool>("LoHabita")
                        .HasColumnType("bit");

                    b.HasKey("idEcosistema", "idEspecie", "LoHabita");

                    b.HasIndex("idEspecie");

                    b.ToTable("EcosistemaEspecie");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EcosistemaImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEcosistema")
                        .HasColumnType("int");

                    b.Property<string>("ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "IdEcosistema");

                    b.HasIndex("IdEcosistema");

                    b.ToTable("EcosistemaImagen");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Especie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("NivelConservacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Especies");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EspecieAmenaza", b =>
                {
                    b.Property<int>("idEspecie")
                        .HasColumnType("int");

                    b.Property<int>("idAmenaza")
                        .HasColumnType("int");

                    b.HasKey("idEspecie", "idAmenaza");

                    b.HasIndex("idAmenaza");

                    b.ToTable("EspecieAmenaza");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EspecieImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<string>("ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id", "IdEspecie");

                    b.HasIndex("IdEspecie");

                    b.ToTable("EspecieImagen");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EstadoConservacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Nombre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstadosDeConservacion");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Pais", b =>
                {
                    b.Property<string>("CodigoAlpha")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CodigoAlpha");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassEncriptada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassNormal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Ecosistema", b =>
                {
                    b.HasOne("EcoMarino.Entidades.Pais", "PaisResponsable")
                        .WithMany()
                        .HasForeignKey("CodigoAlpha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoMarino.Entidades.EstadoConservacion", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EcoMarino.ValueObjects.UbicacionGeograficaVO", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("EcosistemaId")
                                .HasColumnType("int");

                            b1.Property<double>("Latitud")
                                .HasColumnType("float");

                            b1.Property<double>("Longitud")
                                .HasColumnType("float");

                            b1.HasKey("EcosistemaId");

                            b1.ToTable("Ecosistemas");

                            b1.WithOwner()
                                .HasForeignKey("EcosistemaId");
                        });

                    b.Navigation("Estado");

                    b.Navigation("PaisResponsable");

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("EcoMarino.Entidades.EcosistemaAmenaza", b =>
                {
                    b.HasOne("EcoMarino.Entidades.Amenaza", "Amenaza")
                        .WithMany("ecosistemas")
                        .HasForeignKey("AmenazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoMarino.Entidades.Ecosistema", "Ecosistema")
                        .WithMany("_amenazas")
                        .HasForeignKey("EcosistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenaza");

                    b.Navigation("Ecosistema");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EcosistemaEspecie", b =>
                {
                    b.HasOne("EcoMarino.Entidades.Ecosistema", "Ecosistema")
                        .WithMany("_especies")
                        .HasForeignKey("idEcosistema")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EcoMarino.Entidades.Especie", "Especie")
                        .WithMany("_ecosistemas")
                        .HasForeignKey("idEspecie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ecosistema");

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EcosistemaImagen", b =>
                {
                    b.HasOne("EcoMarino.Entidades.Ecosistema", "Eco")
                        .WithMany("_imagenes")
                        .HasForeignKey("IdEcosistema")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Eco");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Especie", b =>
                {
                    b.HasOne("EcoMarino.Entidades.EstadoConservacion", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EcoMarino.ValueObjects.PesoLongEspecieVO", "PesoLong", b1 =>
                        {
                            b1.Property<int>("EspecieId")
                                .HasColumnType("int");

                            b1.Property<double>("Longitud")
                                .HasColumnType("float");

                            b1.Property<double>("Peso")
                                .HasColumnType("float");

                            b1.HasKey("EspecieId");

                            b1.ToTable("Especies");

                            b1.WithOwner()
                                .HasForeignKey("EspecieId");
                        });

                    b.Navigation("Estado");

                    b.Navigation("PesoLong")
                        .IsRequired();
                });

            modelBuilder.Entity("EcoMarino.Entidades.EspecieAmenaza", b =>
                {
                    b.HasOne("EcoMarino.Entidades.Amenaza", "Amenaza")
                        .WithMany("especies")
                        .HasForeignKey("idAmenaza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoMarino.Entidades.Especie", "Especie")
                        .WithMany("_amenazas")
                        .HasForeignKey("idEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenaza");

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("EcoMarino.Entidades.EspecieImagen", b =>
                {
                    b.HasOne("EcoMarino.Entidades.Especie", "Esp")
                        .WithMany("_imagenes")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Esp");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Amenaza", b =>
                {
                    b.Navigation("ecosistemas");

                    b.Navigation("especies");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Ecosistema", b =>
                {
                    b.Navigation("_amenazas");

                    b.Navigation("_especies");

                    b.Navigation("_imagenes");
                });

            modelBuilder.Entity("EcoMarino.Entidades.Especie", b =>
                {
                    b.Navigation("_amenazas");

                    b.Navigation("_ecosistemas");

                    b.Navigation("_imagenes");
                });
#pragma warning restore 612, 618
        }
    }
}
